<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>CS 21: Computer Organization and Assembly Language Programming</title>

		<meta name="description" content="A framework for easily creating beautiful presentations using HTML">
		<meta name="author" content="Hakim El Hattab">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">

		<link rel="stylesheet" href="/css/reveal.css">
		<link rel="stylesheet" href="/css/theme/tope.css" id="theme">

		<!-- Code syntax highlighting -->
		<link rel="stylesheet" href="/lib/css/zenburn.css">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? '/css/print/pdf.css' : '/css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>
        <script src="/js/Chart.js"></script>
		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
				<section>
					<h2>CS 21: Computer Organization and Assembly Language Programming</h2>
					<h3>Load and Store Operations</h3>
					<p class="center">
						<a href="mailto:kedelaspenas@up.edu.ph">Kristofer E. delas Pe&ntilde;as</a>
					</p>
				</section>

				<section>
					<h2>Outline</h2>
                    <ol>
                        <li>Data Section</li>
                        <li>Load Operations</li>
                        <li>Store Operations</li>
                    </ol>
				</section>

				<section>
					<h2><span class="green">Data</span> Section</h2>
				</section>

				<section>
					<h2><span class="green">Data</span> Section</h2>
                    <p class="center">Designated by the <span class="green">.data</span> section of the source code<p>
                    <p class="center">Enables us to <span class="green">save values</span> in the memory of the system<p>
                    <pre>
                        <code>
    .text
    
    .data
    data1:  .byte 0
                        </code>
                    </pre>
				</section>

				<section>
					<h2><span class="green">Load</span> Operations</h2>
				</section>

				<section>
					<h2><span class="green">Load</span> Operations</h2>
                    <p class="center"><span class="green">Transfers</span> data from a memory location to a register</p>
                    <p class="center">Usually involve <span class="green">two registers</span>: first, the register containing the address of the data to be loaded, second, the register that would receive the data</p>
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <pre>
                        <code>
    .text
    main:   la      $t1,    x
            lw      $t2,    ($t1)
    
    .data
    x:  .byte 8
                        </code>
                    </pre>
				</section>

				<section>
					<h2><span class="green">Load</span> Operations</h2>
                    <h3>Byte Addressability</h3>
                    <p class="center">MIPS is a 32-bit processor - a word in MIPS is equal to 32 bits</p>
                    <p class="center">The smallest unit of data that we could address and access is 1 byte/8 bits</p>
                    <p class="center">load halfword: <span class="green">lh</span></p>
                    <p class="center">load byte: <span class="green">lb</span></p>
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <figure class="center">
                        <img class="center" src="/img/lw.jpeg" width=500 />
                    </figure>
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <figure class="center">
                        <img class="center" src="/img/lb.jpeg" width=500 />
                    </figure>
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <figure class="center">
                        <img class="center" src="/img/lb1.jpeg" width=500 />
                    </figure>
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <figure class="center">
                        <img class="center" src="/img/lb2.jpeg" width=500 />
                    </figure>
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <figure class="center">
                    <img class="center" src="/img/lb3.jpeg" width=500 />
                    </figure>
				</section>

				<section>
					<h2><span class="green">Load</span> Operations</h2>
                    <h3>Signed vs Unsigned</h3>
                    <p class="center"><span class="center">Unsigned</span>: for characters</p>
                    <p class="center"><span class="center">Signed</span>: for numbers</p>
				</section>

				<section>
					<h2><span class="green">Load</span> Operations</h2>
                    <h3>Signed vs Unsigned</h3>
                    <p class="center"><span class="center">Unsigned</span>: fill the rest of the register with <span class="green">0</span>s</p>
                    <p class="center"><span class="center">Signed</span>: fill the rest of the register with the <span class="green">value of the leftmost bit</span> of the byte/halfword being loaded</p>
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <h3>Signed vs Unsigned</h3>
                    <img class="center" src="/img/sign1.jpeg" width=500 />
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <h3>Signed vs Unsigned</h3>
                    <img class="center" src="/img/sign2.jpeg" width=500 />
				</section>

				<section>
					<h2><span class="green">Load</span> Operation</h2>
                    <h3>Signed vs Unsigned</h3>
                    <img class="center" src="/img/sign3.jpeg" width=500 />
				</section>

				<section>
					<h2><span class="green">Store</span> Operations</h2>
                    <p class="center">Reverse of load operation</p>
                    <p class="center">Transfers data from a register to a memory location</p>
				</section>

				
			</div>
		</div>

		<script src="/lib/js/head.min.js"></script>
		<script src="/js/reveal.js"></script>
		<script type="text/x-mathjax-config">
			MathJax.Hub.Config({
				tex2jax: {inlineMath: [["$","$"],["\\(","\\)"]]}
			});
		</script>
		<script src="/js/MathJax.js?config=TeX-AMS_HTML-full"></script>

		<script>

			// Full list of configuration options available at:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,
                width: 700,
				transition: 'slide', // none/fade/slide/convex/concave/zoom

				// Optional reveal.js plugins
				dependencies: [
					{ src: '/lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: '/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: '/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: '/plugin/highlight/highlight.js', async: true, condition: function() { return !!document.querySelector( 'pre code' ); }, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: '/plugin/zoom-js/zoom.js', async: true },
					{ src: '/plugin/notes/notes.js', async: true }
				]
			});

		</script>

	</body>
</html>
